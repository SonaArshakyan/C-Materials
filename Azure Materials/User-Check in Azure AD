using Microsoft.Graph;
using Microsoft.Graph.Auth;
using Microsoft.Identity.Client;
using System;
using System.Linq;
using System.Threading.Tasks;

class Program
{
    static async Task Main()
    {
        // Your Azure AD app registration details
        string clientId = "8dfdef89-0e09-4e83-8da5-64d38d52bf77";
        string clientSecret = "jP08Q~lwMXUlElB38z9Vt-Gc2nHh6ai1d-o0oanC";
        string tenantId = "75ffd7d9-19e9-405f-8671-405a9da8e991";

        // User to check
        string usernameToCheck = "sona.arshakyan@veriangroup.com";

        // Initialize the GraphServiceClient
        GraphServiceClient graphClient = GetGraphServiceClient(clientId, clientSecret, tenantId);

        try
        {
            // Check if the user exists
            var user = await GetUserByUsername(graphClient, usernameToCheck);

            if (user != null)
            {
                Console.WriteLine($"User with username '{usernameToCheck}' exists in Azure AD.");
            }
            else
            {
                Console.WriteLine($"User with username '{usernameToCheck}' does not exist in Azure AD.");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
        }
    }

    static GraphServiceClient GetGraphServiceClient(string clientId, string clientSecret, string tenantId)
    {
        var confidentialClientApplication = ConfidentialClientApplicationBuilder
            .Create(clientId)
            .WithClientSecret(clientSecret)
            .WithAuthority(new Uri($"https://login.microsoftonline.com/{tenantId}"))
            .Build();

        var authProvider = new ClientCredentialProvider(confidentialClientApplication);

        return new GraphServiceClient(authProvider);
    }

    static async Task<User> GetUserByUsername(GraphServiceClient graphClient, string username)
    {
        try
        {
            var users = await graphClient.Users.Request().Filter($"userPrincipalName eq '{username}'").GetAsync();
            return users.FirstOrDefault();
        }
        catch (Exception ex)
        {
            return null;
        }
    }
}

Install-Package Microsoft.Graph.Auth -Version 1.0.0-preview.7
Install-Package Microsoft.Graph -Version 4.11.0
Install-Package Microsoft.identity.Client -Version 4.49.1
